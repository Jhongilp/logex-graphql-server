// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Export {
  id               String            @id
  consecutivo      String            @unique
  customerId       String
  transportMode    String?
  status           String
  globalProgress   Int
  createdAt        DateTime          @default(now())
  
  booking          Booking[]
  suppliers        SupplierService[]
  customer         Customer          @relation(fields: [customerId], references: [id])
}

model Customer {
  id      String   @id
  name    String
  country String
  city    String
  address String
  exports Export[]
}

model ShippingInstruction {
  id              String    @id
  bookings        Booking[]
  consigneeName   String
  country         String
  city            String
  consigneePhone  String
  consigneeEmail  String
  deliveryAddress String
  notifyName      String
  notifyPhone     String
  instructions    String
}

model Booking {
  id                  String      @id
  bookingNumber       String
  shippingId          String?
  // broker              Supplier
  transportDocumentId String
  eta                 DateTime
  etd                 DateTime
  etaDestination      DateTime
  documentsDeadline   DateTime
  physicalLeadtime    DateTime
  containerList       Container[]

  exportId              String?
  shippingInstructionId String?
  Export                Export?              @relation(fields: [exportId], references: [id])
  ShippingInstruction   ShippingInstruction? @relation(fields: [shippingInstructionId], references: [id])
}

model Supplier {
  id         String             @id
  name       String
  role       String
  contacts   Contact[]
  exports    SupplierService[]
  containers TransportService[]
}

model SupplierService {
  role       String
  expoId     String
  supplierId String
  export     Export   @relation(fields: [expoId], references: [id])
  supplier   Supplier @relation(fields: [supplierId], references: [id])

  @@id([expoId, supplierId])
}

model Contact {
  id         String    @id
  companyId  String
  position   String
  email      String    @unique
  phone      String
  supplierId String?
  Supplier   Supplier? @relation(fields: [supplierId], references: [id])
}

// we could make the relation using the vehicule instead?
model TransportService {
  containerId String
  supplierId  String
  container   Container @relation(fields: [containerId], references: [id])
  Supplier    Supplier  @relation(fields: [supplierId], references: [id])

  @@id([containerId, supplierId])
}

model Container {
  id               String             @id
  containerNumber  String             @unique
  vehiculoId       String
  transportId      String
  type             String
  dateYardWithdraw DateTime
  dateLoad         DateTime
  dateEnterPort    DateTime
  dateDeparture    DateTime
  netWeight        Float
  grossWeight      Float
  createdAt        DateTime           @default(now())
  bookingId        String?
  Booking          Booking?           @relation(fields: [bookingId], references: [id])
  TransportService TransportService[]
}
