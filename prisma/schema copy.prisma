// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User can be a student or a teacher
model User {
  id        Int                @id @default(autoincrement())
  email     String             @unique
  fisrtName String
  lastName  String
  social    Json?
  courses   CourseEnrollment[]

  testsResults TestResult[] @relation(name: "results")
  testsGraded  TestResult[] @relation(name: "graded")
}

model Course {
  id            Int                @id @default(autoincrement())
  name          String
  courseDetails String
  userId        Int?
  members       CourseEnrollment[]
  tests          Test[]
}

model Test {
  id          Int          @id @default(autoincrement())
  updateAt    DateTime     @updatedAt
  name        String
  date        DateTime
  courseId    Int?
  course      Course?      @relation(fields: [courseId], references: [id])
  testResults TestResult[]
}

model TestResult {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  result    Int
  testId    Int?
  test      Test?    @relation(fields: [testId], references: [id])

  studentId Int
  student   User @relation(name: "results", fields: [studentId], references: [id])
  graderId Int
  gradedBy  User @relation(name: "graded", fields: [graderId], references: [id])
}

model CourseEnrollment {
  createdAt DateTime @default(now())
  role      UserRole
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  courseId  Int
  course    Course   @relation(fields: [courseId], references: [id])

  @@id([userId, courseId, role])
}

enum UserRole {
  STUDENT
  TEACHER
}
